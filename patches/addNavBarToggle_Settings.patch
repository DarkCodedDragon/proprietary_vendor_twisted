From 59fa247f633238e0a8a66fdb06ec2c256fcce7d4 Mon Sep 17 00:00:00 2001
From: Cameron Pickett <pickett.cj@gmail.com>
Date: Thu, 1 Dec 2011 12:56:31 -0800
Subject: [PATCH] Add toggle for Navigation Bar (2/2)

If build is configured without navigation bar enabled (eg. device has hardware
keys), allows user to enable/disable nav bar alongside hardware keys.

If build is configured with nav bar enabled, toggle is hidden so that user
cannot get stuck without the nav bar.

Change-Id: I976de1b050ed643de7726ba6efe33dd12b793354
---
 res/values/strings.xml                        |    4 ++++
 res/xml/display_settings.xml                  |    5 +++++
 src/com/android/settings/DisplaySettings.java |   20 ++++++++++++++++++++
 3 files changed, 29 insertions(+), 0 deletions(-)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index e0da81b..fab8999 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -1637,6 +1637,10 @@
     <string name="summary_font_size" translatable="false">%1$s</string>
     <!-- [CHAR LIMIT=40] Sound & display settings screen, title of dialog for picking font size -->
     <string name="dialog_title_font_size">Font size</string>
+    <!-- Sound & display settings screen, setting option name to change whether navigation bar is shown -->
+    <string name="navigation_bar_title">Enable/Disable Navigation Bar</string>
+    <!-- Sound & display settings screen, setting option summary to change whether navigation bar is shown -->
+    <string name="navigation_bar_summary">(Requires reboot)</string>
 
     <!-- SIM lock settings title -->
     <string name="sim_lock_settings">SIM card lock settings</string>
diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index 6cd2e56..5564af5 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -58,4 +58,9 @@
             android:title="@string/notification_pulse_title"
             android:persistent="false" />
 
+        <CheckBoxPreference
+            android:key="navigation_bar"
+            android:title="@string/navigation_bar_title"
+            android:summary="@string/navigation_bar_summary" />
+
 </PreferenceScreen>
diff --git a/src/com/android/settings/DisplaySettings.java b/src/com/android/settings/DisplaySettings.java
index 5887140..fa0d10e 100644
--- a/src/com/android/settings/DisplaySettings.java
+++ b/src/com/android/settings/DisplaySettings.java
@@ -52,10 +52,12 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
     private static final String KEY_ACCELEROMETER = "accelerometer";
     private static final String KEY_FONT_SIZE = "font_size";
     private static final String KEY_NOTIFICATION_PULSE = "notification_pulse";
+    private static final String KEY_NAVIGATION_BAR = "navigation_bar";
 
     private CheckBoxPreference mAccelerometer;
     private ListPreference mFontSizePref;
     private CheckBoxPreference mNotificationPulse;
+    private CheckBoxPreference mNavigationBar;
 
     private final Configuration mCurConfig = new Configuration();
     
@@ -88,6 +90,7 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
 
         mFontSizePref = (ListPreference) findPreference(KEY_FONT_SIZE);
         mFontSizePref.setOnPreferenceChangeListener(this);
+
         mNotificationPulse = (CheckBoxPreference) findPreference(KEY_NOTIFICATION_PULSE);
         if (mNotificationPulse != null
                 && getResources().getBoolean(
@@ -102,6 +105,18 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
                 Log.e(TAG, Settings.System.NOTIFICATION_LIGHT_PULSE + " not found");
             }
         }
+
+        // Toggle for navigation bar; only show if the nav bar is not necessary for device usage,
+        // otherwise user could get stuck without nav bar
+        mNavigationBar = (CheckBoxPreference) findPreference(KEY_NAVIGATION_BAR);
+        if(getResources().getBoolean(
+                com.android.internal.R.bool.config_showNavigationBar) == true) {
+            getPreferenceScreen().removePreference(mNavigationBar);
+        } else {
+            mNavigationBar.setChecked(Settings.System.getInt(resolver,
+                    Settings.System.NAVIGATION_BAR_VISIBLE, 0) == 1);
+            mNavigationBar.setOnPreferenceChangeListener(this);
+        }
     }
 
     private void updateTimeoutPreferenceDescription(long currentTimeout) {
@@ -249,6 +264,11 @@ public class DisplaySettings extends SettingsPreferenceFragment implements
             Settings.System.putInt(getContentResolver(), Settings.System.NOTIFICATION_LIGHT_PULSE,
                     value ? 1 : 0);
             return true;
+        } else if (preference == mNavigationBar) {
+            boolean value = mNavigationBar.isChecked();
+            Settings.System.putInt(getContentResolver(), Settings.System.NAVIGATION_BAR_VISIBLE,
+                    value ? 1 : 0);
+            return true;
         }
         return super.onPreferenceTreeClick(preferenceScreen, preference);
     }
-- 
1.7.5.4

